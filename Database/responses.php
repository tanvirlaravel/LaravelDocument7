<?php include_once '../inc/header.php' ?>
<?php include_once '../inc/nav.php' ?>

<h1 class="my-4 text-info text-center display-3">HTTP Responses</h1>
<div class="row">
    <div class="col-3">
        <div class="nav flex-column nav-pills card" id="v-pills-tab" role="tablist" aria-orientation="vertical">

            <a class="nav-link active" id="v-pills-home-tab" data-toggle="pill" href="#v-pills-home">Creating Responses</a>

            <a class="nav-link" id="v-pills-profile-tab" data-toggle="pill" href="#v-pills-profile">Redirects</a>

            <a class="nav-link" id="v-pills-messages-tab" data-toggle="pill" href="#v-pills-messages">Other Response Types</a>

            <a class="nav-link" id="v-pills-settings-tab" data-toggle="pill" href="#v-pills-settings">Response Macros</a>

        </div>
    </div>
    <div class="col-9">
        <div class="tab-content" id="v-pills-tabContent">

            <div class="tab-pane fade show active" id="v-pills-home" role="tabpanel" aria-labelledby="v-pills-home-tab">

                <h4 class="mb-4 py-2 pl-5 pr-2 bg-info d-inline-block">Creating Responses</h4>

                <h3>Strings & Arrays</h3>
                <p>All routes and controllers should return a response to be sent back to the user's browser. The most basic response is returning a string from a route or controller. The framework will automatically convert the string into a full HTTP response:</p>

                <pre class="p-3 text-white-50 bg-dark">
Route::get('/', function () {
    return 'Hello World';
});
</pre>

                <p>In addition to returning strings from your routes and controllers, you may also return arrays. The framework will automatically convert the array into a JSON response:</p>

                <pre class="p-3 text-white-50 bg-dark">
Route::get('/', function () {
    return [1, 2, 3];
});
</pre>

                <p class="bg-warning p-3">you can also return Eloquent collections from your routes or controllers? They will automatically be converted to JSON. </p>

                <h3>Response Objects</h3>
                <p>returning full <code>Illuminate\Http\Response</code> instances</p>
                <p>Returning a full <code>Response</code> instance allows you to customize the response's HTTP status code and headers.</p>
                <pre class="p-3 text-white-50 bg-dark">
Route::get('home', function () {
    return response('Hello World', 200)
                  ->header('Content-Type', 'text/plain');
});
</pre>

                <h3>Attaching Headers To <Responses></Responses>
                </h3>
                <p>Keep in mind that most response methods are chainable, allowing for the fluent construction of response instances.</p>
                <pre class="p-3 text-white-50 bg-dark">
return response($content)
            ->header('Content-Type', $type)
            ->header('X-Header-One', 'Header Value')
            ->header('X-Header-Two', 'Header Value');
            
            
return response($content)
            ->withHeaders([
                'Content-Type' => $type,
                'X-Header-One' => 'Header Value',
                'X-Header-Two' => 'Header Value',
            ]);
</pre>

                <h3>Cache Control Middleware</h3>
                later

                <h3>Attaching Cookies To Responses</h3>
                <pre class="p-3 text-white-50 bg-dark">
return response($content)
                ->header('Content-Type', $type)
                ->cookie('name', 'value', $minutes);

These cookies will be attached to the outgoing response before it is sent to the browser:

Cookie::queue(Cookie::make('name', 'value', $minutes));

Cookie::queue('name', 'value', $minutes);
</pre>

                <h3>Cookies & Encryption</h3>
                <p>By default, all cookies generated by Laravel are encrypted and signed so that they can't be modified or read by the client. </p>
                later


            </div>



            <div class="tab-pane fade" id="v-pills-profile" role="tabpanel" aria-labelledby="v-pills-profile-tab">
                <h4 class="mb-4 py-2 pl-5 pr-2 bg-info d-inline-block">Redirects</h4>

                <p>Redirect responses are instances of the <code>Illuminate\Http\RedirectResponse</code> class, and contain the proper headers needed to redirect the user to another URL. There are several ways to generate a <code>RedirectResponse</code> instance. The simplest method is to use the global <code>redirect</code> helper:</p>

                <p> Sometimes you may wish to redirect the user to their previous location, such as when a submitted form is invalid. You may do so by using the global <code>back</code> helper function. Since this feature utilizes the <code>session</code>, make sure the route calling the <code>back</code> function is using the web middleware group or has all of the session middleware applied:
                </p>

                <h3>Redirecting To Named Routes</h3>
                <p>When you call the redirect helper with no parameters, an instance of Illuminate\Routing\Redirector is returned,</p>
                <code>return redirect()->route('login');</code>
                <code>return redirect()->route('profile', ['id' => 1]);</code>

                <h3>Populating Parameters Via Eloquent Models</h3>
                <p>If you are redirecting to a route with an "ID" parameter that is being populated from an Eloquent model, you may pass the model itself. The ID will be extracted automatically:</p>
                <pre class="p-3 text-white-50 bg-dark">
// For a route with the following URI: profile/{id}

return redirect()->route('profile', [$user]);
</pre>

                <h3>Redirecting To Controller Actions</h3>
                <p>you do not need to specify the full namespace to the controller since Laravel's RouteServiceProvider will automatically set the base controller namespace:</p>
                <pre class="p-3 text-white-50 bg-dark">
return redirect()->action('HomeController@index');

return redirect()->action(
    'UserController@profile', ['id' => 1]
);
</pre>


                <h3>Redirecting To External Domains</h3>
                <pre class="p-3 text-white-50 bg-dark">
return redirect()->away('https://www.google.com');
</pre>

                <h3>Redirecting With Flashed Session Data</h3>
                <p>Redirecting to a new URL and flashing data to the session are usually done at the same time.</p>
                <pre class="p-3 text-white-50 bg-dark">
Route::post('user/profile', function () {
    // Update the user's profile...

    return redirect('dashboard')->with('status', 'Profile updated!');
});
</pre>



            </div>

            <div class="tab-pane fade" id="v-pills-messages" role="tabpanel" aria-labelledby="v-pills-messages-tab">

                <h4 class="mb-4 py-2 pl-5 pr-2 bg-info d-inline-block">Other Response Types</h4>
                <p>The response helper may be used to generate other types of response instances. When the response helper is called without arguments, an implementation of the Illuminate\Contracts\Routing\ResponseFactory contract is returned. This contract provides several helpful methods for generating responses.</p>

                <h3>View Responses</h3>
                later

                <h3>JSON Responses</h3>
                <p>The json method will automatically set the Content-Type header to application/json, as well as convert the given array to JSON using the json_encode PHP function:</p>
                <pre class="p-3 text-white-50 bg-dark">
return response()->json([
    'name' => 'Abigail',
    'state' => 'CA'
]);
</pre>

                <p class="bg-danger p2">If you would like to create a JSONP response, you may use the json method in combination with the withCallback method:</p>
                <pre class="p-3 text-white-50 bg-dark">
return response()
            ->json(['name' => 'Abigail', 'state' => 'CA'])
            ->withCallback($request->input('callback'));
</pre>

                <h3>File Downloads</h3>
                later

                <h3>File Responses</h3>
                later
            </div>

            <div class="tab-pane fade" id="v-pills-settings" role="tabpanel" aria-labelledby="v-pills-settings-tab">
                <h4 class="mb-4 py-2 pl-5 pr-2 bg-info d-inline-block">Response Macros</h4>


                later



            </div>


        </div>
    </div>
</div>




<?php include_once '../inc/footer.php' ?>
